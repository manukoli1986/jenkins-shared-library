    env.giturl = 'ssh://git@github.com:7999/amfe/monitoring.git'
    env.NODE1 = "10.14.192.27"
    env.NODE2 = "10.14.192.28"
node ('master')
{	
	stage ('Build') 
        {
	    def branch = input id: 'branch',
            message: 'Please select branch',
            ok: 'Okay',
            parameters: 
	        [  
	    	    [
            $class: 'ChoiceParameterDefinition', choices: 'master\ntesting', 
            name: 'Take your pick',
            description: 'A select  option'
          	    ]  
	        ] 
            git branch: "${branch}", url: "${env.giturl}"
            def pom = readMavenPom file: 'pom.xml'
	   
	    	sh '''cd $WORKSPACE
	    	mvn clean -U -X -o install sonar:sonar '''          
        }
	
	stage ('Deploy On Node1') {
        timeout(time: 20, unit: 'MINUTES') {
        try{
        withCredentials([usernameColonPassword(credentialsId: 'nexuscred', variable: 'nexuscred')]) {
            def pom = readMavenPom file: 'pom.xml'
            def artifactURL = """http://10.14.192.96:8081/repository/maven-releases/com/githubank/${pom.artifactId}/${pom.version}/${pom.artifactId}-${pom.version}.jar"""
            def IP = input(
            message: 'Do you want to proceed ?',
            ok: 'Okay',
            parameters:
            [
                [
            $class: 'ChoiceParameterDefinition', choices: 'Yes\nNo',
            name: '',
                ]
            ])
            sh """ssh -t -t volt@${env.NODE1} -o StrictHostKeyChecking=no << EOF
            cd /home/volt
            curl -O -u "$nexuscred" ${artifactURL}
            sh ./launcher.sh ${pom.artifactId}-${pom.version}.jar /dev/null  2>&1
            timeout 20s tailf nohup.out
            exit 0
            EOF"""   
        }            
		     currentBuild.result = 'SUCCESS'           
        } catch (Exception err) {
             currentBuild.result = 'FAILURE'
             echo "As deployment is already done on ${env.NODE1}"
        } }
    }

	stage ('Deploy On Node2') {
        timeout(time: 20, unit: 'MINUTES') {
        try{
        withCredentials([usernameColonPassword(credentialsId: 'nexuscred', variable: 'nexuscred')]) {
            def pom = readMavenPom file: 'pom.xml'
            def artifactURL = """http://10.14.192.96:8081/repository/maven-releases/com/githubk/${pom.artifactId}/${pom.version}/${pom.artifactId}-${pom.version}.jar"""
            def IP = input(
            message: 'Do you want to proceed ?',
            ok: 'Okay',
            parameters:
            [
                [
            $class: 'ChoiceParameterDefinition', choices: 'Yes\nNo',
            name: '',
                ]
            ])
            sh """ssh -t -t volt@${env.NODE2} -o StrictHostKeyChecking=no << EOF
            cd /home/volt
            curl -O -u "$nexuscred" ${artifactURL}
            sh ./launcher.sh ${pom.artifactId}-${pom.version}.jar /dev/null  2>&1
            timeout 20s tailf nohup.out
            exit 0
            EOF"""   
        }            
		     currentBuild.result = 'SUCCESS'           
        } catch (Exception err) {
             currentBuild.result = 'FAILURE'
             echo "As deployment is already done on ${env.NODE2}"
        } }
    }
		
	// stage ('Deploy On DR Nodes'){
    //     withCredentials([usernameColonPassword(credentialsId: 'nexuscred', variable: 'nexuscred')]) {
    //     def pom = readMavenPom file: 'pom.xml'
    //     def artifactURL = """http://lcoalhost:8081/repository/maven-releases/com/github/${pom.artifactId}/${pom.version}/${pom.artifactId}-${pom.version}.jar"""
    //     def IP = input(
    //         message: 'Do you want to proceed ?',
    //         ok: 'Okay',
    //         parameters:
    //         [
    //             [
    //         $class: 'ChoiceParameterDefinition', choices: 'Yes\nNo',
    //         name: '',
    //             ]
    //         ])
    //     parallel(
    //         node1: {
    //         sh """ssh -t -t volt@${env.NODE3} -o StrictHostKeyChecking=no << EOF
    //         curl -O -u "$nexuscred" ${artifactURL}
    //         exit 0
    //         EOF""" 
    //                 },
    //         node2: {
    //         sh """ssh -t -t volt@${env.NODE4} -o StrictHostKeyChecking=no << EOF
    //         curl -O -u "$nexuscred" ${artifactURL}
    //         exit 0
    //         EOF""" 
    //                 }
    //             )
    //     }   
	// }
}
